#user  nobody;
events {}
worker_processes  1;
http {
  default_type  application/octet-stream;
  server {
    # this server listens on port 80
    listen 8080 default_server;
    listen [::]:8080 default_server;
    
    # name this server "nodeserver", but we can call it whatever we like
    server_name json_server;

    # the location / means that when we visit the root url (localhost:80/), we use this configuration
    location / {

      proxy_http_version 1.1;
      proxy_cache_bypass $http_upgrade;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # the real magic is here where we forward requests to the address that the Node.js server is running on
      proxy_pass http://json_server:3000;
    }
  }
    server {
    # this server listens on port 80
    listen 3000 default_server;
    listen [::]:3000 default_server;
    
    # name this server "nodeserver", but we can call it whatever we like
    server_name lite_server;

    # the location / means that when we visit the root url (localhost:80/), we use this configuration
    location ~ / {
      # a bunch of boilerplate proxy configuration
      # rewrite ^/json_server/(.*)$ /makaka/$1 last;


      proxy_http_version 1.1;
      proxy_cache_bypass $http_upgrade;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # the real magic is here where we forward requests to the address that the Node.js server is running on
      proxy_pass http://lite_server:3000;
    }
  }
}